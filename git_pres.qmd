---
title: "MeetupR Nantes"
subtitle: "C'est quoi un système de contrôle de version ? Et pourquoi m'intéresser à git ?"
format:
  revealjs: 
    theme: minty.scss
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    pointer:
      pointerSize: 18
      color: '#eb349b'
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
revealjs-plugins:
  - verticator
  - pointer
---

# 

![xkcd comics](https://imgs.xkcd.com/comics/git_2x.png){fig-alt="git_xkcd" fig-align="center"}

# Pourquoi utiliser Git?

::: incremental
-   A on tous sauvé un fichier `final.R`
-   ... qu'on a modifié en `final_extra_analysis.R`
-   ... puis en `final_modif_denis.R` et `final_modif_morgane.R`
-   ... et on a depuis perdu la trace de la dernière sauvegarde 😐
:::

## Pourquoi utiliser Git?

Un **système de contrôle de version** (SVC) relie et unifie les différentes versions d'un même projet entre elles.

![atlassian tutorial](https://wac-cdn.atlassian.com/dam/jcr:389059a7-214c-46a3-bc52-7781b4730301/hero.svg?cdnVersion=638){fig-alt="git_tree" fig-align="center"}

## Pourquoi utiliser Git?

Un **système de contrôle de version** (SVC) permet de :

-   🧐 garder le fil de ses versions

-   ⏳ remonter le temps

-   🤝 collaborer efficacement

-   🔭️ avoir accès à ses projets partout

# Comment utiliser git?

## Comment utiliser git?

✨ utilisable sous RStudio ✨

![git tab in RStudio](git_tab_rstudio.png){fig-alt="git_tab" fig-align="center"}

## Les manoeuvres

![git command (adapted from C.Staud)](git_cmd.png){fig-alt="git_cmd" fig-align="center"}

## Les manoeuvres locales

Sauvegarder les modifications en **local** :

::: incremental
-   `git add` (ou ☑) pour selectionner les modifications à sauver
-   `git commit` pour valider la nouvelles version du projet
-    🏁 example
:::

## Les outils

On peut explorer toutes nos modifications :

::: incremental
-   **précédentes** avec le `git history`
-   **prévue/staged** avec le `git diff`
-    🏁 example
:::

## Les manoeuvres remote

Sauvegarder les modifications en **remote** :

::: incremental
-   `git pull` pour récupérer les modifications existantes
-   `git push` pour mettre à jour le remote avec notre local
-    🏁 example
:::

🔭 Le repository remote est hébergé en ligne (GitHub, GitLab, Gitea), on peut le **cloner** sur une autre machine!

# Et les branches?


# Source

remerciements source : https://github.com/quarto-dev/quarto-cli https://profy.dev/project/github-minesweeper/ https://thinkr.fr/travailler-avec-git-via-rstudio-et-versionner-son-code/
